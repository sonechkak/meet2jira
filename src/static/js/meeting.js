// –î–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
let meetingsData = [];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å—Ç—Ä–µ—á –∏–∑ API
async function loadMeetingsFromAPI() {
    try {
        const response = await fetch('/meetings');
        if (response.ok) {
            meetingsData = await response.json();
            displayMeetingsList();
        } else {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å—Ç—Ä–µ—á:', response.statusText);
            showMeetingsError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
        showMeetingsError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –≤ —Å–µ–∫—Ü–∏–∏ –≤—Å—Ç—Ä–µ—á
function showMeetingsError(message) {
    const meetingsList = document.getElementById('meetingsList');
    if (meetingsList) {
        meetingsList.innerHTML = `<div class="empty-meetings" style="color: #d32f2f;">${message}</div>`;
    } else {
        console.error('–≠–ª–µ–º–µ–Ω—Ç meetingsList –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á
function displayMeetingsList() {
    const meetingsList = document.getElementById('meetingsList');

    if (!meetingsList) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç meetingsList –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    if (meetingsData.length === 0) {
        meetingsList.innerHTML = '<div class="empty-meetings">–í—Å—Ç—Ä–µ—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
        return;
    }

    meetingsList.innerHTML = meetingsData.map(meeting => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—è status
        let statusClass = '';
        let statusText = '';

        switch(meeting.status) {
            case 'completed':
                statusClass = 'status-processed';
                statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω–æ';
                break;
            case 'processing':
                statusClass = 'status-pending';
                statusText = '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è';
                break;
            case 'scheduled':
                statusClass = 'status-pending';
                statusText = '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ';
                break;
            case 'failed':
                statusClass = 'status-failed';
                statusText = '–û—à–∏–±–∫–∞';
                break;
            default:
                statusClass = 'status-pending';
                statusText = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        }

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤—Å—Ç—Ä–µ—á–∏
        const meetingDate = new Date(meeting.meeting_date).toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è
        const createdDate = new Date(meeting.created_at).toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'short',
            hour: '2-digit',
            minute: '2-digit'
        });

        // –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        const participants = meeting.participants || '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã';
        const duration = meeting.duration_minutes ? `‚è±Ô∏è ${meeting.duration_minutes} –º–∏–Ω` : '';

        return `
            <div class="meeting-item" onclick="selectMeetingItem(${meeting.id})">
                <div class="meeting-title">${meeting.title}</div>
                <div class="meeting-date">üìÖ ${meetingDate}</div>
                ${participants ? `<div class="meeting-participants">üë• ${participants}</div>` : ''}
                ${duration ? `<div class="meeting-duration">${duration}</div>` : ''}
                ${meeting.file_name ? `<div class="meeting-file">üìÑ ${meeting.file_name}</div>` : ''}
                <div class="meeting-created">üìù –°–æ–∑–¥–∞–Ω–æ: ${createdDate}</div>
                <span class="meeting-status ${statusClass}">${statusText}</span>
                ${meeting.description ? `<div class="meeting-description">${meeting.description}</div>` : ''}
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å—Ç—Ä–µ—á–∏
function selectMeetingItem(meetingId) {
    const meeting = meetingsData.find(m => m.id === meetingId);
    if (meeting) {
        console.log('–í—ã–±—Ä–∞–Ω–∞ –≤—Å—Ç—Ä–µ—á–∞:', meeting);
        showMeetingResults(meeting);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Å—Ç—Ä–µ—á–∏
async function showMeetingResults(meeting) {
    const resultsSection = document.getElementById('resultsSection');
    const resultsList = document.getElementById('resultsList');

    if (!resultsSection || !resultsList) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }

    if (meeting.status === 'completed') {
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏
            const response = await fetch(`/meetings/${meeting.id}/tasks`);
            if (response.ok) {
                const tasks = await response.json();

                if (tasks.length > 0) {
                    resultsList.innerHTML = tasks.map(task => `
                        <div class="result-item">
                            <h3>${task.title || task.summary}</h3>
                            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${task.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                            <p><strong>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</strong> ${task.priority || 'Medium'}</p>
                            <p><strong>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</strong> ${task.assignee || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}</p>
                            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${task.status || 'To Do'}</p>
                            ${task.jira_key ? `<p><strong>Jira:</strong> <a href="${task.jira_url || '#'}" target="_blank">${task.jira_key}</a></p>` : ''}
                            <p><small>–°–æ–∑–¥–∞–Ω–æ: ${new Date(task.created_at).toLocaleDateString('ru-RU')}</small></p>
                        </div>
                    `).join('');
                } else {
                    resultsList.innerHTML = '<div class="result-item">–ó–∞–¥–∞—á–∏ –¥–ª—è —ç—Ç–æ–π –≤—Å—Ç—Ä–µ—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
                }
            } else {
                resultsList.innerHTML = '<div class="result-item">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á</div>';
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á:', error);
            resultsList.innerHTML = '<div class="result-item">–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á</div>';
        }

        resultsSection.style.display = 'block';
    } else if (meeting.status === 'failed') {
        resultsList.innerHTML = `<div class="result-item">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Å—Ç—Ä–µ—á–∏</div>`;
        resultsSection.style.display = 'block';
    } else if (meeting.status === 'processing') {
        resultsList.innerHTML = '<div class="result-item">–í—Å—Ç—Ä–µ—á–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</div>';
        resultsSection.style.display = 'block';
    } else {
        resultsList.innerHTML = '<div class="result-item">–í—Å—Ç—Ä–µ—á–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞, –Ω–æ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞</div>';
        resultsSection.style.display = 'block';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å—Ç—Ä–µ—á
function refreshMeetings() {
    loadMeetingsFromAPI();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    const meetingsList = document.getElementById('meetingsList');
    if (meetingsList) {
        loadMeetingsFromAPI();
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        setInterval(loadMeetingsFromAPI, 30000);
    } else {
        console.warn('–°–µ–∫—Ü–∏—è –≤—Å—Ç—Ä–µ—á –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –î–æ–±–∞–≤—å—Ç–µ HTML —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á.');
    }
});